// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;
import {IFaucetPolicy} from "./interfaces/IFaucetPolicy.sol";

contract MaxCooldownPolicy is IFaucetPolicy {
    /*//////////////////////////////////////////////////////////////
                                 TYPES
    //////////////////////////////////////////////////////////////*/


    /*//////////////////////////////////////////////////////////////
                            STATE VARIABLES
    //////////////////////////////////////////////////////////////*/
    uint256 public immutable maxCooldown;
    mapping (address => uint) lastClaimTime;
    /*//////////////////////////////////////////////////////////////
                                 EVENTS
    //////////////////////////////////////////////////////////////*/


    /*//////////////////////////////////////////////////////////////
                                 ERRORS
    //////////////////////////////////////////////////////////////*/


/*CONSTRUCTOR*/
    constructor(uint256 _maxCooldown) {
        maxCooldown = _maxCooldown;
    }

    /*//////////////////////////////////////////////////////////////
                               FUNCTIONS
    //////////////////////////////////////////////////////////////*/

    function validateClaim(address user) public view override returns (bool) {
        return block.timestamp>=lastClaimTime[user]+maxCooldown;
    }
    function afterClaim(address user) public override {
        lastClaimTime[user] = block.timestamp;
    }
}